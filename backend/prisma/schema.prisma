// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  uid       String   @id @unique @default(cuid())
  name String @unique @db.VarChar(40)
  email String @unique @db.VarChar(300)
  password     String   @db.VarChar(50)
  isAdmin Boolean @default(false)
  pastEvents Event[]
  reviews Review[]
  participant ParticipantsList[]
}

model Beach {
  bid String @id @unique @default(cuid())
  name String @unique @db.VarChar(100)
  status Status
  image Bytes @db.LongBlob
  description String @db.VarChar(500)
  Location String @db.VarChar(200)
  reviews Review[]
  events Event[]
}

enum Status {
  Poor
  Sufficient
  Good
  Excellent
}

model Review {
  rid String @id @unique @default(cuid())
  user User @relation(fields: [userId], references: [uid], onDelete: Cascade)
  userId String @unique
  beach Beach @relation(fields: [beachId], references: [bid], onDelete: Cascade)
  beachId String @unique
  rating Int
  comment String @db.VarChar(250)
}

model Event {
  eid String @id @unique @default(cuid())
  beach Beach @relation(fields: [beachId], references: [bid], onDelete: Cascade)
  beachId String @unique
  organizer User @relation(fields: [organizerId], references: [uid], onDelete: Cascade)
  organizerId String @unique
  description String @db.VarChar(500)
  date  DateTime   @default(now())
  participants ParticipantsList[]
}

model ParticipantsList {
  pid String @id @unique @default(cuid())
  user User @relation(fields: [userId], references: [uid], onDelete: Cascade)
  userId String @unique
  event Event @relation(fields: [eventId], references: [eid], onDelete: Cascade)
  eventId String @unique
}
